#!/usr/bin/env bash
# ---------------------------------------------------------------------------
# Pideck
#
#  This program is the main entry point.
#
# ---------------------------------------------------------------------------


# ----------------------------- CONFIG -------------------------------------

# where to search for music. Can be directories, .pls files or .m3u files
# For multiple entries, each must have its own -l prefix within the quotes
LIBRARY="-l /media/"

# experimental crate scanning, choose one script and uncomment LIBRARY
#source /usr/share/pideck/crate_scan_1
#source /usr/share/pideck/crate_scan_2
#LIBRARY="${CRATES[@]}"

# the audio backend to use "alsa" or "jackd"
BACKEND="alsa"

# the sample rate to use with the ALSA backend
SAMPLERATE="48000"

# the import script to use
IMPORT="/usr/share/xwax/xwax-import"

# the scan script to use "xwax-scan" or "xwax-bpm-scan"
SCAN="/usr/share/xwax/xwax-bpm-scan"

#------------------------------------------------------------------------------

# kill everything first
killall --wait xwax
killall --wait jackd
killall --wait /usr/bin/jackd
killall --wait python
killall --wait lxpanel
echo -e "\n"

#start card autodetection script
source /usr/share/pideck/cards_autodetect

sleep 1

if [ $BACKEND = "jackd" ]; then
    echo -e "\nNow we are ready to start xwax and jackd:\n"
    xwax -i $IMPORT -s $SCAN -k -q 40 -g 630x480 --no-decor -j deck1 $LIBRARY &
    sleep 2

    # connect jack ports
    jack_connect system:capture_1 xwax:deck1_timecode_L
    jack_connect system:capture_2 xwax:deck1_timecode_R
    jack_connect system:playback_1 xwax:deck1_playback_L
    jack_connect system:playback_2 xwax:deck1_playback_R

else
     echo -e "\nNow we are ready to start xwax:\n"
     xwax -i $IMPORT -s $SCAN -k -q 89 -g 630x480 --no-decor $DICER -m $BUFFER -r $SAMPLERATE $XCARD $LIBRARY &
fi

# start server for remote control
if ! ss -tulpn | grep -q :8080; then
    /usr/share/pideck/track-upload &
fi
