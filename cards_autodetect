#!/usr/bin/env bash

#read conf file into array and intitialize needed extra arrays
mapfile -t CONF < /usr/share/pideck/sup_cards.conf

declare -a SUP=()
declare -a BUFF=()
declare -a XWAX_CARD=()
declare -a PRESENT=()

#get ammount of indexes in parent array
j=${#CONF[@]}

#fill in the needed arrays
for ((i=0; i<$j; i++)) do
        BUFF[$i]=$( echo "${CONF[$i]}" | tail -c 3)
        ((l=${#CONF[$i]}-3))
        SUP[$i]=$(echo ${CONF[$i]:0:$l})
done

#delete obsolete array
unset CONF

# check we have a soundcard installed
if cat /proc/asound/cards | grep -q 'no soundcards'; then
    echo "NO SOUNDCARDS FOUND"
    python /usr/share/pideck/error_messages no_soundcards_found
    /usr/share/pideck/pideck &
    exit
fi

# parse soundcard file
CARDS_LINE_1=`sed '1,2!d' /proc/asound/cards`
CARDS_LINE_2=`sed '3,4!d' /proc/asound/cards`
CARDS_LINE_3=`sed '5,6!d' /proc/asound/cards`

echo "Available sound cards:"
echo $CARDS_LINE_1
echo $CARDS_LINE_2
echo $CARDS_LINE_3

#detect supported cards while keeping track of detected cards with aux array

XCARD_NUM=0
i=0

for k in "${SUP[@]}"
do

 if ( echo $CARDS_LINE_2 | grep -q "$(echo $k)" ) || ( echo $CARDS_LINE_1 | grep -q "$(echo $k)" ); then

    echo -e "\nFOUND "$k

      if echo $CARDS_LINE_1 | grep -q "$(echo $k)"; then
        CARD_NUM=`echo $CARDS_LINE_1 | grep -o "[0-9]" | head -1`
      else
        CARD_NUM=`echo $CARDS_LINE_2 | grep -o "[0-9]" | head -1`
      fi

    ((XCARD_NUM=XCARD_NUM+1))
     PRESENT[$i]=$k
     XWAX_CARD[$i]=$CARD_NUM
     XCARD="-a hw:$CARD_NUM"
     BUFFER="${BUFF[$i]}"
 fi
  ((i=i+1))
done

echo -e "\nNumber of supported cards found: "$XCARD_NUM "\n"

#if no supported cards found select first usb audio or default to first card with 8ms buffer
if (($XCARD_NUM < 1)); then

     if echo $CARDS_LINE_1 | grep -q "USB AUDIO"; then
        CARD_NUM=`echo $CARDS_LINE_1 | grep -o "[0-9]" | head -1`

      elif echo $CARDS_LINE_2 | grep -q "USB AUDIO"; then
        CARD_NUM=`echo $CARDS_LINE_2 | grep -o "[0-9]" | head -1`

      else
       CARD_NUM=`echo $CARDS_LINE_1 | grep -o "[0-9]" | head -1`

      fi

     XCARD="-a hw:$CARD_NUM"
     BUFFER=08
fi

#if more than one supported card found compare buffer sizes to select the card
if (($XCARD_NUM > 1)); then

    for ((i=0; i<$j; i++)) do
        if ( echo "${PRESENT[$i]}" | grep -q "$(echo "${SUP[$i]}")"); then
           for ((k=0; k<$j; k++)) do
              if (("${BUFF[$i]}" < "${BUFF[$k]}")) && (echo "${PRESENT[$k]}" | grep -q "$(echo "${SUP[$k]}")"); then
                 XCARD="-a hw:"${XWAX_CARD[$i]}""
                 BUFFER="${BUFF[$i]}"
              fi
           done
        fi
    done

fi

#delete rest of arrays

unset SUP
unset BUFF
unset XWAX_CARD
unset PRESENT

#space for dj soundcard conditionals

if ( echo $CARDS_LINE_2 | grep -q "Native Instruments Audio 8 DJ" ) || ( echo $CARDS_LINE_1 | grep -q "Native Instruments Audio 8 DJ" ); then
       XCARD="-a plughw:Audio8DJ,0,0 -a plughw:Audio8DJ,0,1"
       python /usr/share/pideck/touchscreen_controls_L --card twindeck &
       python /usr/share/pideck/touchscreen_controls_R --card twindeck &

elif ( echo $CARDS_LINE_2 | grep -q "Native Instruments Audio 6 DJ" ) || ( echo $CARDS_LINE_1 | grep -q "Native Instruments Audio 6 DJ" ); then
       XCARD="-a T6_pair1 -a T6_pair2"
       cp /usr/share/pideck/T6.asound.conf ~/.asoundrc
       python /usr/share/pideck/touchscreen_controls_L --card traktora6 &
       python /usr/share/pideck/touchscreen_controls_R --card traktora6 &

elif ( echo $CARDS_LINE_2 | grep -q "Native Instruments Audio 4 DJ" ) || ( echo $CARDS_LINE_1 | grep -q "Native Instruments Audio 4 DJ" ); then
       XCARD="-a plughw:Audio4DJ,0,0 -a plughw:Audio4DJ,0,1"
       python /usr/share/pideck/touchscreen_controls_L --card twindeck &
       python /usr/share/pideck/touchscreen_controls_R --card twindeck &

elif ( echo $CARDS_LINE_2 | grep -q "DIGITAL JOCKEY-INTERFACE" ) || ( echo $CARDS_LINE_1 | grep -q "DIGITAL JOCKEY-INTERFACE" ); then
       XCARD="-a plughw:JOCKEYINTERFACE"
       python /usr/share/pideck/touchscreen_controls_L &
       python /usr/share/pideck/touchscreen_controls_R &

elif ( echo $CARDS_LINE_2 | grep -q "Hercules DJ Console Mk2" ) || ( echo $CARDS_LINE_1 | grep -q "Hercules DJ Console Mk2" ); then
       XCARD="-a Mk2_pair1 -a Mk2_pair2"
       cp /usr/share/pideck/Mk2.asound.conf ~/.asoundrc
       echo -e "Setting output levels to maximum:\n"
       amixer -c Mk2 sset PCM 181
       python /usr/share/pideck/touchscreen_controls_L --card twindeck &
       python /usr/share/pideck/touchscreen_controls_R --card twindeck &

elif ( echo $CARDS_LINE_2 | grep -q "Brown from T" ) && ( echo $CARDS_LINE_1 | grep -q "Brown from T" ); then
       XCARD="-a hw:0 -a hw:1"
       python /usr/share/pideck/touchscreen_controls_L --card twindeck &
       python /usr/share/pideck/touchscreen_controls_R --card twindeck &

elif ( echo $CARDS_LINE_2 | grep -q "audioinjector-pi-soundcard" ) || ( echo $CARDS_LINE_1 | grep -q "audioinjector-pi-soundcard" ); then
       python /usr/share/pideck/touchscreen_controls_L --card audioinjector &
       python /usr/share/pideck/touchscreen_controls_R --card audioinjector &

elif ( echo $CARDS_LINE_1 | grep -q "Rane" ) || ( echo $CARDS_LINE_1 | grep -q "SL-1" ); then
   	BUFFER=4
	SAMPLERATE="44100 --phono" 
	XCARD="-a hw:$CARD_NUM,0 -a hw:$CARD_NUM,1"
	python /usr/share/pideck/touchscreen_controls_L --card ranesl1 &
	python /usr/share/pideck/touchscreen_controls_R --card ranesl1 &
else
       python /usr/share/pideck/touchscreen_controls_L &
       python /usr/share/pideck/touchscreen_controls_R &

fi

#set output level of numark stereo io and similar cards to 100%

if ( echo $CARDS_LINE_1 | grep -q "BurrBrown from Texas Instruments USB AUDIO" ); then
       echo -e "Setting output levels to maximum on first card:\n"
       amixer -c 0 sset PCM 64
fi

if ( echo $CARDS_LINE_2 | grep -q "BurrBrown from Texas Instruments USB AUDIO" ); then
       echo -e "\nSetting output levels to maximum on second card:\n"
       amixer -c 1 sset PCM 64
fi

if ( echo $CARDS_LINE_1 | grep -q "Burr-Brown from TI USB Audio CODEC" ); then
       echo -e "Setting output levels to maximum on first card:\n"
       amixer -c 0 sset PCM 128
fi

if ( echo $CARDS_LINE_2 | grep -q "Burr-Brown from TI USB Audio CODEC" ); then
       echo -e "\nSetting output levels to maximum on second card:\n"
       amixer -c 1 sset PCM 128
fi

echo -e "\nUsing "$XCARD" with" $BUFFER"ms buffer\n"

#check for dicer

if ( echo $CARDS_LINE_3 | grep -q "Novation DMS Ltd Dicer" ) || ( echo $CARDS_LINE_2 | grep -q "Novation DMS Ltd Dicer" ) || ( echo $CARDS_LINE_1 | grep -q "Novation DMS Ltd Dicer" ); then
        DICER="--dicer hw:Dicer"
        echo -e "FOUND Novation Dicer\n"
fi
